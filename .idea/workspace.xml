<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="57c6af6c-27ff-43b5-bf6d-fa811b21c2c8" name="Changes" comment="23/06/03, 2:xxpm, Update 10 - &#10;&#10;Fixing up the getFuture() method to a working state. It was 6:00am and I had been awake for like 32 hours, cut me some slack.&#10;&#10;Clearing out some old/garbage code.&#10;&#10;Added a getPast() method. Works identical to the getFuture() method, except it gives us the users desired date in the past. Obviously.&#10;&#10;Question for future self or other programmers: If you write a bunch of garbage code like I did here, then write a cleaner method to make all that garbage irrelevant now - do you keep that old stuff in your code? Commented out down at the bottom maybe? Or tossed into a txt file? Or just know it's in GitHub? &#10;- I'm going the GitHub route for now, I talk to myself too much in comments.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/TimeCalcMk1.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/TimeCalcMk1.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="3d67cbe0-39aa-4917-b349-0cad8332bdc2" />
        <option name="url" value="git@github.com:/CapnCook33/TimeCalcMk1.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="3b6am8zj" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2QPedLevoeL1X4F78JunVaV5pp2" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;vcs.Git&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration>$USER_HOME$/.subversion</configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="57c6af6c-27ff-43b5-bf6d-fa811b21c2c8" name="Changes" comment="" />
      <created>1685259735457</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1685259735457</updated>
    </task>
    <task id="LOCAL-00001" summary="23/05/28, 3:55am - Update 1 - First attempt at committing and pushing to Github using the features inside of IntelliJ.">
      <created>1685260690956</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1685260690956</updated>
    </task>
    <task id="LOCAL-00002" summary="Update 3? - Second terminal test&#10;&#10;&#10;23/05/28, 5:24am - Update 4(?) - Wrapping for the night. Figured out how to use IntelliJ with GitHub, now I just need to learn to properly use it. There are other Java classes and API's to handle what I want to accomplish, but I plan to finish this project regardless and personalize it for my needs.&#10;&#10;Included in update:&#10;&#10;getCurrentDateTime() method that will return both the date and time as a String with the &quot;yyyy/MM/dd HH:mm:ss&quot; format.&#10;&#10;getDate() method that will return the current date as a String with the &quot;yy/MM/dd&quot; format.&#10;&#10;getTime() method that will return the current time as a String with the &quot;HH:mm:ss&quot; format.">
      <created>1685266176455</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1685266176455</updated>
    </task>
    <task id="LOCAL-00003" summary="23/05/31, ~1:10am, Update 6 -&#10;&#10;Cleaning a few things up, using \n instead of println, basic house cleaning like that, at the moment. Created variables that I may end up removing anyway.">
      <created>1685510613084</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1685510613084</updated>
    </task>
    <task id="LOCAL-00004" summary="23/05/31, ~1:25am, Update 6 -&#10;&#10;Cleaning a few things up, using \n instead of println, basic house cleaning like that, at the moment. Created variables that I may end up removing anyway.">
      <created>1685510711580</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1685510711580</updated>
    </task>
    <task id="LOCAL-00005" summary="23/05/31, 2:26am, Update 7 -&#10;&#10;Scanner added to take user input.&#10;&#10;Created methods to add 15-120 days or remove 15-120 days. Notes to self scattered throughout. Definitely need to clean this up a bit. Works for now though.&#10;&#10;Gross looking if-statements to give the user the desired information.&#10;&#10;Continuation loop added and fixed so you're not stuck in a Quantum Loop with Scott Bacula.&#10;&#10;Time for a sandwich.">
      <created>1685514404441</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1685514404441</updated>
    </task>
    <task id="LOCAL-00006" summary="23/05/31, 11:58pm, Update 8 -&#10;&#10;Started working towards the consolidation of all those add and remove methods. These new methods will allow the user to tell us how many days ahead or behind they want to see. May need to make an adjustment, probably will, buuuuuut - food time.">
      <created>1685591898575</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1685591898575</updated>
    </task>
    <task id="LOCAL-00007" summary="23/06/01, ~6;00am, Update 9 - &#10;&#10;Personal Update - Food turned into sleep.&#10;&#10;Application Update - Edited very tiny detail on lines 109-123 to hold that in place for the moment. Very tiny detail, very tiny update.">
      <created>1685613657825</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1685613657825</updated>
    </task>
    <task id="LOCAL-00008" summary="23/06/03, 2:xxpm, Update 10 - &#10;&#10;Fixing up the getFuture() method to a working state. It was 6:00am and I had been awake for like 32 hours, cut me some slack.&#10;&#10;Clearing out some old/garbage code.&#10;&#10;Added a getPast() method. Works identical to the getFuture() method, except it gives us the users desired date in the past. Obviously.&#10;&#10;Question for future self or other programmers: If you write a bunch of garbage code like I did here, then write a cleaner method to make all that garbage irrelevant now - do you keep that old stuff in your code? Commented out down at the bottom maybe? Or tossed into a txt file? Or just know it's in GitHub? &#10;- I'm going the GitHub route for now, I talk to myself too much in comments.">
      <created>1685817856312</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1685817856312</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="User">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="*" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="23/05/28, 3:55am - Update 1 - First attempt at committing and pushing to Github using the features inside of IntelliJ." />
    <MESSAGE value="23/05/28, 5:24am - Update 4(?) - Wrapping for the night. Figured out how to use IntelliJ with GitHub, now I just need to learn to properly use it. There are other Java classes and API's to handle what I want to accomplish, but I plan to finish this project regardless and personalize it for my needs.&#10;&#10;Included in update:&#10;&#10;getCurrentDateTime() method that will return both the date and time as a String with the &quot;yyyy/MM/dd HH:mm:ss&quot; format.&#10;&#10;getDate() method that will return the current date as a String with the &quot;yy/MM/dd&quot; format.&#10;&#10;getTime() method that will return the current time as a String with the &quot;HH:mm:ss&quot; format." />
    <MESSAGE value="Update 3? - Second terminal test&#10;&#10;&#10;23/05/28, 5:24am - Update 4(?) - Wrapping for the night. Figured out how to use IntelliJ with GitHub, now I just need to learn to properly use it. There are other Java classes and API's to handle what I want to accomplish, but I plan to finish this project regardless and personalize it for my needs.&#10;&#10;Included in update:&#10;&#10;getCurrentDateTime() method that will return both the date and time as a String with the &quot;yyyy/MM/dd HH:mm:ss&quot; format.&#10;&#10;getDate() method that will return the current date as a String with the &quot;yy/MM/dd&quot; format.&#10;&#10;getTime() method that will return the current time as a String with the &quot;HH:mm:ss&quot; format." />
    <MESSAGE value="Update 3? - Second terminal test&#10;&#10;&#10;23/05/28, 5:24am - Update 4(?) - Wrapping for the night. Figured out how to use IntelliJ with GitHub, now I just need to learn to properly use it. There are other Java classes and API's to handle what I want to accomplish, but I plan to finish this project regardless and personalize it for my needs.&#10;&#10;Included in update:&#10;&#10;getCurrentDateTime() method that will return both the date and time as a String with the &quot;yyyy/MM/dd HH:mm:ss&quot; format.&#10;&#10;getDate() method that will return the current date as a String with the &quot;yy/MM/dd&quot; format.&#10;&#10;getTime() method that will return the current time as a String with the &quot;HH:mm:ss&quot; format.&#10;&#10;&#10;23/05/31, ~1:10am, Update 6 -" />
    <MESSAGE value="23/05/31, ~1:10am, Update 6 -&#10;&#10;Cleaning a few things up, using \n instead of println, basic house cleaning like that, at the moment. Created variables that I may end up removing anyway." />
    <MESSAGE value="23/05/31, ~1:25am, Update 6 -&#10;&#10;Cleaning a few things up, using \n instead of println, basic house cleaning like that, at the moment. Created variables that I may end up removing anyway." />
    <MESSAGE value="23/05/31, 2:26am, Update 7 -&#10;&#10;Scanner added to take user input.&#10;&#10;Created methods to add 15-120 days or remove 15-120 days. Notes to self scattered throughout. Definitely need to clean this up a bit. Works for now though.&#10;&#10;Gross looking if-statements to give the user the desired information.&#10;&#10;Continuation loop added and fixed so you're not stuck in a Quantum Loop with Scott Bacula.&#10;&#10;Time for a sandwich." />
    <MESSAGE value="23/05/31, 11:58pm, Update 8 -&#10;&#10;Started working towards the consolidation of all those add and remove methods. These new methods will allow the user to tell us how many days ahead or behind they want to see. May need to make an adjustment, probably will, buuuuuut - food time." />
    <MESSAGE value="23/06/01, ~6;00am, Update 9 - &#10;&#10;Personal Update - Food turned into sleep.&#10;&#10;Application Update - Edited very tiny detail on lines 109-123 to hold that in place for the moment. Very tiny detail, very tiny update." />
    <MESSAGE value="23/06/03, 2:xxpm, Update 10 - &#10;&#10;Fixing up the getFuture() method to a working state. It was 6:00am and I had been awake for like 32 hours, cut me some slack.&#10;&#10;Clearing out some old/garbage code.&#10;&#10;Added a getPast() method. Works identical to the getFuture() method, except it gives us the users desired date in the past. Obviously.&#10;&#10;Question for future self or other programmers: If you write a bunch of garbage code like I did here, then write a cleaner method to make all that garbage irrelevant now - do you keep that old stuff in your code? Commented out down at the bottom maybe? Or tossed into a txt file? Or just know it's in GitHub? &#10;- I'm going the GitHub route for now, I talk to myself too much in comments." />
    <option name="LAST_COMMIT_MESSAGE" value="23/06/03, 2:xxpm, Update 10 - &#10;&#10;Fixing up the getFuture() method to a working state. It was 6:00am and I had been awake for like 32 hours, cut me some slack.&#10;&#10;Clearing out some old/garbage code.&#10;&#10;Added a getPast() method. Works identical to the getFuture() method, except it gives us the users desired date in the past. Obviously.&#10;&#10;Question for future self or other programmers: If you write a bunch of garbage code like I did here, then write a cleaner method to make all that garbage irrelevant now - do you keep that old stuff in your code? Commented out down at the bottom maybe? Or tossed into a txt file? Or just know it's in GitHub? &#10;- I'm going the GitHub route for now, I talk to myself too much in comments." />
  </component>
</project>